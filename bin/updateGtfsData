#!/usr/bin/env ruby

require 'gtfs_reader'
require 'json'

# Set data directory
dataRoot = File.join(__dir__, '/../data/gtfs/')

# Clean out existing files
Dir.glob(
  [
    File.join(dataRoot, 'shapes', '*.json'),
    File.join(dataRoot, 'trips', '*.json'),
    File.join(dataRoot, 'agency.json'),
    File.join(dataRoot, 'routes.json'),
    File.join(dataRoot, 'stops.json')
  ]
).each do |file|
  puts "Deleting #{file}"
  File.delete(file)
end

# Configure the static parsing of GTFS feeds
GtfsSplitData = { trips: {}, shapes: {} }
GtfsConsolidatedData = { agency: {}, routes: {}, stops: {} }
GtfsReader.config do
  verbose true
  return_hashes true
  sources do
    default do
      url 'http://www.nashvillemta.org/GoogleExport/google_transit.zip'
      before { |etag| puts "Processing GTFS source with tag #{etag}..." }
      handlers do
        agency { |row| GtfsConsolidatedData[:agency][row[:agency_id]] = row }
        routes { |row| GtfsConsolidatedData[:routes][row[:route_id]] = row }
        shapes do |row|
          GtfsSplitData[:shapes][row[:shape_id]] = [] unless GtfsSplitData[:shapes][row[:shape_id]]
          GtfsSplitData[:shapes][row[:shape_id]] << row
        end
        trips { |row| GtfsSplitData[:trips][row[:trip_id]] = row }
        stops { |row| GtfsConsolidatedData[:stops][row[:stop_id]] = row }
      end
    end
  end
end

GtfsReader.update_all!

GtfsConsolidatedData.each do |type, data|
  File.open(File.join(dataRoot, "#{type}.json"), 'w') do |f|
    puts f.path
    f.write data.to_json
    f.close
  end
end

GtfsSplitData.each do |type, data|
  data.each do |r|
    File.open(File.join(dataRoot, type.to_s, "#{r[0]}.json"), 'w') do |f|
      puts f.path
      f.write r[1].to_json
      f.close
    end
  end
end
